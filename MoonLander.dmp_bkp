00001  0000             F*=$C000
00002  C000             
00003  C000             
00004  C000             ; @                 
00005  C000             ; INITIALIZATION OF ALL VARIABLES WITH VALUE 0
00006  C000             ; @                 
00007  C000             
00008  C000             INIT       
00009  C000                        ;JSR $E544      ; CLEAN SCREEN
00010  C000  A9 00                 LDA #0
00011  C002  8D B4 C1              STA AX          ; ACCELERAZIONE LOW
00012  C005  8D B5 C1              STA AY
00013  C008  8D B6 C1              STA VX          ; VELOCITÃ€ LOW-HIGH
00014  C00B  8D B7 C1              STA VX+1
00015  C00E  8D B8 C1              STA VY
00016  C011  8D B9 C1              STA VY+1
00017  C014  8D BA C1              STA PXL         ; POSIZIONE LOW
00018  C017  8D BB C1              STA PYL
00019  C01A             
00020  C01A                        ;LDA #%00000111  ; %00000111 = BROWN
00021  C01A                        ;STA $D020       ; BORDER COLOR SET TO BROWN
00022  C01A  A9 00                 LDA #%00000000   ; %00000000 = BLACK
00023  C01C  8D 21 D0              STA $D021        ; BACKGOUD COLOR SET TO BLACK
00024  C01F  A9 01                 LDA #1           ; $00 = WHITE
00025  C021  8D 86 02              STA $0286        ; TEXT COLOR SET TO WRITE
00026  C024                        
00027  C024                        
00028  C024             
00029  C024             
00030  C024             ; @                 
00031  C024             ; SCREEN LANDSCAPE. USING A LOOP THE LANDSCAPE
00032  C024             ;       IS GENERATED ROW BY ROW. X REGISTER IS USED TO COUNT THE NUMBER OF CHAR
00033  C024             ;       TO DROW ROW BY ROW. ACCUMULATOR CONTAINS THE CHARS TO DROW, IN THIS
00034  C024             ;       CASE A SPACE. ROWX BLOCKS ARE USED TO GENERATED THE ROWS, ROWXC TO DEFINE
00035  C024             ;       THE COLOUR OF EACH CHAR. FOR EACH CHAR/COLOUR SEE THE MEMORY MAPS
00036  C024             ;       REPORTED INTO PROGRAMMER USER MANUAL.
00037  C024             ; @                 
00038  C024             
00039  C024  A9 A0                 LDA #160
00040  C026  A2 00                 LDX #0
00041  C028             
00042  C028  9D C0 07   ROW1       STA $07C0,X
00043  C02B  E8                    INX
00044  C02C  E0 28                 CPX #40
00045  C02E  D0 F8                 BNE ROW1
00046  C030             
00047  C030  A2 00                 LDX #0
00048  C032  9D 98 07   ROW2       STA $0798,X
00049  C035  E8                    INX
00050  C036  E0 28                 CPX #40
00051  C038  D0 F8                 BNE ROW2
00052  C03A             
00053  C03A  A2 00                 LDX #0
00054  C03C  9D 70 07   ROW3       STA $770,X
00055  C03F  E8                    INX
00056  C040  E0 14                 CPX #20
00057  C042  D0 F8                 BNE ROW3
00058  C044             
00059  C044  A2 00                 LDX #0
00060  C046  9D 48 07   ROW4       STA $748,X
00061  C049  E8                    INX
00062  C04A  E0 13                 CPX #19
00063  C04C  D0 F8                 BNE ROW4
00064  C04E             
00065  C04E             
00066  C04E  A2 00                 LDX #0
00067  C050  9D 20 07   ROW5       STA $720,X
00068  C053  E8                    INX
00069  C054  E0 11                 CPX #17
00070  C056  D0 F8                 BNE ROW5
00071  C058             
00072  C058  A2 00                 LDX #0
00073  C05A  9D F8 06   ROW6       STA $6F8,X
00074  C05D  E8                    INX
00075  C05E  E0 0F                 CPX #15
00076  C060  D0 F8                 BNE ROW6
00077  C062             
00078  C062                        
00079  C062  A9 09                 LDA #9
00080  C064  A2 00                 LDX #0
00081  C066             
00082  C066  A2 00                 LDX #0
00083  C068  9D C0 DB   ROW1C      STA $DBC0,X
00084  C06B  E8                    INX
00085  C06C  E0 28                 CPX #40
00086  C06E  D0 F8                 BNE ROW1C
00087  C070                        
00088  C070  A2 00                 LDX #0
00089  C072  9D 98 DB   ROW2C      STA $DB98,X
00090  C075  E8                    INX
00091  C076  E0 28                 CPX #40
00092  C078  D0 F8                 BNE ROW2C
00093  C07A             
00094  C07A  A2 00                 LDX #0
00095  C07C  9D 70 DB   ROW3C      STA $DB70,X
00096  C07F  E8                    INX
00097  C080  E0 14                 CPX #20
00098  C082  D0 F8                 BNE ROW3C
00099  C084             
00100  C084  A2 00                 LDX #0
00101  C086  9D 48 DB   ROW4C      STA $DB48,X
00102  C089  E8                    INX
00103  C08A  E0 13                 CPX #19
00104  C08C  D0 F8                 BNE ROW4C
00105  C08E             
00106  C08E  A2 00                 LDX #0
00107  C090  9D 20 DB   ROW5C      STA $DB20,X
00108  C093  E8                    INX
00109  C094  E0 11                 CPX #17
00110  C096  D0 F8                 BNE ROW5C
00111  C098             
00112  C098  A2 00                 LDX #0
00113  C09A  9D F8 DA   ROW6C      STA $DAF8,X
00114  C09D  E8                    INX
00115  C09E  E0 0F                 CPX #15
00116  C0A0  D0 F8                 BNE ROW6C
00117  C0A2             
00118  C0A2             ; @                 
00119  C0A2             ; MAIN CODE
00120  C0A2             ; @                 
00121  C0A2             
00122  C0A2                        
00123  C0A2  A9 FF      MAIN       LDA #$FF ; 255 = %11111111 ;>> TRICK TO MAKE THE PROGRAM MORE SLOW.
00124  C0A4  CD 12 D0   WAIT       CMP $D012                  ;  WAIT UNTIL THAT RASTER IS AT ROW 255
00125  C0A7  D0 FB                 BNE WAIT                   ;  $D012 CONTAINS THE NUMBER OF SCREEN ROW THAT
00126  C0A9                        ;  RASTER IS DROWING
00127  C0A9  A9 11                 LDA #%00010001             ;>> INTO REGISTER $D015 ARE REPORTED WHICH
00128  C0AB  8D 15 D0              STA $D015                  ;  SPRITES ARE VISIBLE OR NOT. AT BEGINNING
00129  C0AE                        ;  ONLY LANDER AND PLATFORM.
00130  C0AE  A9 00                 LDA #0
00131  C0B0  8D B4 C1              STA AX
00132  C0B3  A9 01                 LDA #1
00133  C0B5  8D B5 C1              STA AY
00134  C0B8                        
00135  C0B8                        ; @                 
00136  C0B8                        ; COLLISION MANAGEMENT BETWEEN LANDER AND BACKGROUND.
00137  C0B8                        ; $D01F
00138  C0B8                        ; BIT #X: 1 = SPRITE #X COLLIDED WITH BACKGROUND.
00139  C0B8                        ; IF COLLISION BETWEEN LANDER AND BACKGROUND IS DETECTED,
00140  C0B8                        ; LANDER SPRITE IS DISABLED AND GAME QUITS.
00141  C0B8                        ; @                 
00142  C0B8  A9 01                 LDA #%00000001
00143  C0BA  2C 1F D0              BIT $D01F
00144  C0BD  F0 26                 BEQ CONT01
00145  C0BF  A9 30                 LDA #%00110000  ; DISABLE LANDER SPRITE AND ENABLE EXPLOSION
00146  C0C1  8D 15 D0              STA $D015       ;
00147  C0C4  AD 00 D0              LDA $D000       ; MOVE EXPLOSION SPRITE TO RIGHT LOCATION
00148  C0C7  8D 0A D0              STA $D00A       ;
00149  C0CA  AD 01 D0              LDA $D001
00150  C0CD  8D 0B D0              STA $D00B
00151  C0D0  A2 00                 LDX #0
00152  C0D2  BD C2 C1   DRAWCR     LDA CR_MSG,X    ; DIAPLY MESSAGE FOR CRASH
00153  C0D5  9D F1 05              STA $05F1,X
00154  C0D8  A9 01                 LDA #1
00155  C0DA  9D F1 D9              STA $D9F1,X
00156  C0DD  E8                    INX
00157  C0DE  E0 07                 CPX #7
00158  C0E0  D0 F0                 BNE DRAWCR
00159  C0E2  4C B3 C1              JMP EXIT         ; GAME END!
00160  C0E5                        ; @                 
00161  C0E5                        ; COLLISION MANAGEMENT BETWEEN LANDER AND PLATFORM
00162  C0E5                        ; $D01E
00163  C0E5                        ; BIT #X: 1 = SPRITE #X COLLIDED WITH ANOTHER SPRITE.
00164  C0E5                        ; @                 
00165  C0E5  A9 20      CONT01     LDA #%00100000
00166  C0E7  2C 1E D0              BIT $D01E
00167  C0EA  F0 10                 BEQ CONT02
00168  C0EC  EE 20 D0              INC $D020
00169  C0EF  A2 00                 LDX #0
00170  C0F1  BD BC C1   DRAWOK     LDA LD_MSG,X    ; DIAPLY MESSAGE FOR LANDING
00171  C0F4  9D F1 05              STA $05F1,X     ; STRANGE BEHAVIOUR HERE!!! SEEMS THAT OLWAYS COLLISION
00172  C0F7  A9 01                 LDA #1          ; IS PRESENT. WHY???
00173  C0F9  9D F1 D9              STA $D9F1,X
00174  C0FC                        ;INX
00175  C0FC                        ;CPX #6
00176  C0FC                        ;BNE DRAWOK
00177  C0FC                        ;JMP EXIT      ; GAME END!
00178  C0FC             
00179  C0FC  A9 01      CONT02     LDA #%00000001 ; MASK JOYSTICK UP MOVEMENT
00180  C0FE  2C 00 DC              BIT $DC00      ; BITWISE AND WITH ADDRESS 56320
00181  C101  D0 0A                 BNE CONT1      ; NO THRUST UP
00182  C103  A9 13                 LDA #%00010011
00183  C105  8D 15 D0              STA $D015
00184  C108  A9 FC                 LDA #-4
00185  C10A  8D B5 C1              STA AY
00186  C10D             
00187  C10D  A9 02      CONT1      LDA #%00000010 ; MASK JOYSTICK DOWN MOVEMENT
00188  C10F  2C 00 DC              BIT $DC00      ; BITWISE AND WITH ADDRESS 56320
00189  C112  D0 05                 BNE CONT2      ; NO THRUST DOWN
00190  C114  A9 02                 LDA #2
00191  C116  8D B5 C1              STA AY
00192  C119             
00193  C119  A9 04      CONT2      LDA #%00000100 ; MASK JOYSTICK LEFT MOVEMENT
00194  C11B  2C 00 DC              BIT $DC00      ; BITWISE AND WITH ADDRESS 56320
00195  C11E  D0 0A                 BNE CONT3      ; NO THRUST LEFT
00196  C120  A9 19                 LDA #%00011001
00197  C122  8D 15 D0              STA $D015
00198  C125  A9 FF                 LDA #-1
00199  C127  8D B4 C1              STA AX
00200  C12A             
00201  C12A  A9 08      CONT3      LDA #%00001000 ; MASK JOYSTICK RIGHT MOVEMENT
00202  C12C  2C 00 DC              BIT $DC00      ; BITWISE AND WITH ADDRESS 56320
00203  C12F  D0 0A                 BNE CONT4      ; NO THRUST RIGHT
00204  C131  A9 15                 LDA #%00010101
00205  C133  8D 15 D0              STA $D015
00206  C136  A9 01                 LDA #1
00207  C138  8D B4 C1              STA AX
00208  C13B             
00209  C13B  18         CONT4      CLC
00210  C13C  AD B6 C1              LDA VX  ; VX = VX + AX * DT
00211  C13F  6D B4 C1              ADC AX
00212  C142  8D B6 C1              STA VX
00213  C145  2C B4 C1              BIT AX
00214  C148  30 04                 BMI MIX
00215  C14A  A9 00                 LDA #0
00216  C14C  10 02                 BPL MIX2
00217  C14E  A9 FF      MIX        LDA #255
00218  C150  6D B7 C1   MIX2       ADC VX+1
00219  C153  8D B7 C1              STA VX+1
00220  C156             
00221  C156  18                    CLC
00222  C157  AD B8 C1              LDA VY  ; VY = VY + AY * DT
00223  C15A  6D B5 C1              ADC AY
00224  C15D  8D B8 C1              STA VY
00225  C160  2C B5 C1              BIT AY
00226  C163  30 04                 BMI MIY
00227  C165  A9 00                 LDA #0
00228  C167  10 02                 BPL MIY2
00229  C169  A9 FF      MIY        LDA #255
00230  C16B  6D B9 C1   MIY2       ADC VY+1
00231  C16E  8D B9 C1              STA VY+1
00232  C171             
00233  C171  18                    CLC
00234  C172                        ;LANDER
00235  C172  AD BA C1              LDA PXL  ; PX = PX + VX * DT
00236  C175  6D B6 C1              ADC VX
00237  C178  8D BA C1              STA PXL
00238  C17B  AD 00 D0              LDA $D000
00239  C17E  6D B7 C1              ADC VX+1
00240  C181  8D 00 D0              STA $D000 ; LANDER
00241  C184  8D 02 D0              STA $D002 ; MAINENGINE
00242  C187  8D 04 D0              STA $D004 ; LEFT ROKET
00243  C18A  8D 06 D0              STA $D006 ; RIGHT ROKET
00244  C18D                        
00245  C18D                        
00246  C18D  18                    CLC
00247  C18E  AD BB C1              LDA PYL  ; PY = PY + VY * DT
00248  C191  6D B8 C1              ADC VY
00249  C194  8D BB C1              STA PYL
00250  C197  AD 01 D0              LDA $D001
00251  C19A  6D B9 C1              ADC VY+1
00252  C19D  8D 01 D0              STA $D001 ; LANDER
00253  C1A0  8D 03 D0              STA $D003 ; MAINENGINE
00254  C1A3  8D 05 D0              STA $D005 ; LEFT ROKET
00255  C1A6  8D 07 D0              STA $D007 ; RIGHT ROKET
00256  C1A9                        
00257  C1A9                        ;LDA $D01E
00258  C1A9                        ;LDX $D01E
00259  C1A9                        ;JSR $BDCD
00260  C1A9                        ;JSR $E544
00261  C1A9             
00262  C1A9  A9 10                 LDA #%00010000 ; MASK JOYSTICK BUTTON PUSH
00263  C1AB  2C 00 DC              BIT $DC00      ; BITWISE AND WITH ADDRESS 56320
00264  C1AE  F0 03                 BEQ EXIT       ; BUTTON PRESSED -> EXIT
00265  C1B0  4C A2 C0              JMP MAIN
00266  C1B3  60         EXIT       RTS            ; BACK TO BASIC
00267  C1B4             
00268  C1B4  00         AX         BYTE 0
00269  C1B5  00         AY         BYTE 0
00270  C1B6  00         VX         BYTE 0
00271  C1B7  00                    BYTE 0
00272  C1B8  00         VY         BYTE 0
00273  C1B9  00                    BYTE 0
00274  C1BA  00         PXL        BYTE 0
00275  C1BB  00         PYL        BYTE 0
00276  C1BC  0C 01 0E   LD_MSG     BYTE 12,1,14,4,5,4   ; LANDED
00277  C1C2  03 12 01   CR_MSG     BYTE 3,18,1,19,8,5,4 ; CRASHED
00278  C1C9             

******* 36 Label(s) *******
ax = $C1B4 
ay = $C1B5 
cont01 = $C0E5 
cont02 = $C0FC 
cont1 = $C10D 
cont2 = $C119 
cont3 = $C12A 
cont4 = $C13B 
cr_msg = $C1C2 
drawCr = $C0D2 
drawOK = $C0F1 
exit = $C1B3 
init = $C000 
ld_msg = $C1BC 
main = $C0A2 
mix = $C14E 
mix2 = $C150 
miy = $C169 
miy2 = $C16B 
pxL = $C1BA 
pyL = $C1BB 
row1 = $C028 
row1c = $C068 
row2 = $C032 
row2c = $C072 
row3 = $C03C 
row3c = $C07C 
row4 = $C046 
row4c = $C086 
row5 = $C050 
row5c = $C090 
row6 = $C05A 
row6c = $C09A 
vx = $C1B6 
vy = $C1B8 
wait = $C0A4 

******* 2 Unused label(s) *******
drawOK
init

******* 1 Variable(s) *******
tgt_c64  = $0001
******* 1 Unused variables(s) *******
tgt_c64

