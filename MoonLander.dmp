00001  0000             F*=$C000
00002  C000             
00003  C000             
00004  C000             ; @                 
00005  C000             ; INITIALIZATION OF ALL VARIABLES WITH VALUE 0
00006  C000             ; @                 
00007  C000             
00008  C000             INIT       
00009  C000                        
00010  C000  A9 11                 LDA #%00010001  ; MAKE VISIBLE ONLY LANDER AND PLATFORM SPRITE
00011  C002  8D 15 D0              STA $D015
00012  C005             
00013  C005  A9 2C                 LDA #44         ; POSITION OF LANDER
00014  C007  8D 00 D0              STA $D000
00015  C00A  A9 78                 LDA #120
00016  C00C  8D 01 D0              STA $D001
00017  C00F                        
00018  C00F  A9 96                 LDA #150         ; POSITION OF PLATFORM
00019  C011  8D 08 D0              STA $D008
00020  C014  A9 A5                 LDA #165
00021  C016  8D 09 D0              STA $D009
00022  C019                        
00023  C019             
00024  C019                        ;JSR $E544      ; CLEAN SCREEN
00025  C019  A9 00                 LDA #0
00026  C01B  8D D5 C1              STA AX          ; ACCELERAZIONE LOW
00027  C01E  8D D6 C1              STA AY
00028  C021  8D D7 C1              STA VX          ; VELOCITÃ€ LOW-HIGH
00029  C024  8D D8 C1              STA VX+1
00030  C027  8D D9 C1              STA VY
00031  C02A  8D DA C1              STA VY+1
00032  C02D  8D DB C1              STA PXL         ; POSIZIONE LOW
00033  C030  8D DC C1              STA PYL
00034  C033             
00035  C033                        ;LDA #%00000111  ; %00000111 = BROWN
00036  C033                        ;STA $D020       ; BORDER COLOR SET TO BROWN
00037  C033  A9 00                 LDA #%00000000   ; %00000000 = BLACK
00038  C035  8D 21 D0              STA $D021        ; BACKGOUD COLOR SET TO BLACK
00039  C038  A9 01                 LDA #1           ; $00 = WHITE
00040  C03A  8D 86 02              STA $0286        ; TEXT COLOR SET TO WRITE
00041  C03D                        
00042  C03D                        
00043  C03D             
00044  C03D             
00045  C03D             ; @                 
00046  C03D             ; SCREEN LANDSCAPE. USING A LOOP THE LANDSCAPE
00047  C03D             ;       IS GENERATED ROW BY ROW. X REGISTER IS USED TO COUNT THE NUMBER OF CHAR
00048  C03D             ;       TO DROW ROW BY ROW. ACCUMULATOR CONTAINS THE CHARS TO DROW, IN THIS
00049  C03D             ;       CASE A SPACE. ROWX BLOCKS ARE USED TO GENERATED THE ROWS, ROWXC TO DEFINE
00050  C03D             ;       THE COLOUR OF EACH CHAR. FOR EACH CHAR/COLOUR SEE THE MEMORY MAPS
00051  C03D             ;       REPORTED INTO PROGRAMMER USER MANUAL.
00052  C03D             ; @                 
00053  C03D             
00054  C03D  A9 A0                 LDA #160
00055  C03F  A2 00                 LDX #0
00056  C041             
00057  C041  9D C0 07   ROW1       STA $07C0,X
00058  C044  E8                    INX
00059  C045  E0 28                 CPX #40
00060  C047  D0 F8                 BNE ROW1
00061  C049             
00062  C049  A2 00                 LDX #0
00063  C04B  9D 98 07   ROW2       STA $0798,X
00064  C04E  E8                    INX
00065  C04F  E0 28                 CPX #40
00066  C051  D0 F8                 BNE ROW2
00067  C053             
00068  C053  A2 00                 LDX #0
00069  C055  9D 70 07   ROW3       STA $770,X
00070  C058  E8                    INX
00071  C059  E0 14                 CPX #20
00072  C05B  D0 F8                 BNE ROW3
00073  C05D             
00074  C05D  A2 00                 LDX #0
00075  C05F  9D 48 07   ROW4       STA $748,X
00076  C062  E8                    INX
00077  C063  E0 13                 CPX #19
00078  C065  D0 F8                 BNE ROW4
00079  C067             
00080  C067             
00081  C067  A2 00                 LDX #0
00082  C069  9D 20 07   ROW5       STA $720,X
00083  C06C  E8                    INX
00084  C06D  E0 11                 CPX #17
00085  C06F  D0 F8                 BNE ROW5
00086  C071             
00087  C071  A2 00                 LDX #0
00088  C073  9D F8 06   ROW6       STA $6F8,X
00089  C076  E8                    INX
00090  C077  E0 0F                 CPX #15
00091  C079  D0 F8                 BNE ROW6
00092  C07B             
00093  C07B                        
00094  C07B  A9 09                 LDA #9
00095  C07D  A2 00                 LDX #0
00096  C07F             
00097  C07F  A2 00                 LDX #0
00098  C081  9D C0 DB   ROW1C      STA $DBC0,X
00099  C084  E8                    INX
00100  C085  E0 28                 CPX #40
00101  C087  D0 F8                 BNE ROW1C
00102  C089                        
00103  C089  A2 00                 LDX #0
00104  C08B  9D 98 DB   ROW2C      STA $DB98,X
00105  C08E  E8                    INX
00106  C08F  E0 28                 CPX #40
00107  C091  D0 F8                 BNE ROW2C
00108  C093             
00109  C093  A2 00                 LDX #0
00110  C095  9D 70 DB   ROW3C      STA $DB70,X
00111  C098  E8                    INX
00112  C099  E0 14                 CPX #20
00113  C09B  D0 F8                 BNE ROW3C
00114  C09D             
00115  C09D  A2 00                 LDX #0
00116  C09F  9D 48 DB   ROW4C      STA $DB48,X
00117  C0A2  E8                    INX
00118  C0A3  E0 13                 CPX #19
00119  C0A5  D0 F8                 BNE ROW4C
00120  C0A7             
00121  C0A7  A2 00                 LDX #0
00122  C0A9  9D 20 DB   ROW5C      STA $DB20,X
00123  C0AC  E8                    INX
00124  C0AD  E0 11                 CPX #17
00125  C0AF  D0 F8                 BNE ROW5C
00126  C0B1             
00127  C0B1  A2 00                 LDX #0
00128  C0B3  9D F8 DA   ROW6C      STA $DAF8,X
00129  C0B6  E8                    INX
00130  C0B7  E0 0F                 CPX #15
00131  C0B9  D0 F8                 BNE ROW6C
00132  C0BB             
00133  C0BB             ; @                 
00134  C0BB             ; MAIN CODE
00135  C0BB             ; @                 
00136  C0BB             
00137  C0BB                        
00138  C0BB  A9 FF      MAIN       LDA #$FF ; 255 = %11111111 ;>> TRICK TO MAKE THE PROGRAM MORE SLOW.
00139  C0BD  CD 12 D0   WAIT       CMP $D012                  ;  WAIT UNTIL THAT RASTER IS AT ROW 255
00140  C0C0  D0 FB                 BNE WAIT                   ;  $D012 CONTAINS THE NUMBER OF SCREEN ROW THAT
00141  C0C2                        ;  RASTER IS DROWING
00142  C0C2  A9 11                 LDA #%00010001             ;>> INTO REGISTER $D015 ARE REPORTED WHICH
00143  C0C4  8D 15 D0              STA $D015                  ;  SPRITES ARE VISIBLE OR NOT. AT BEGINNING
00144  C0C7                        ;  ONLY LANDER AND PLATFORM.
00145  C0C7  A9 00                 LDA #0
00146  C0C9  8D D5 C1              STA AX
00147  C0CC  A9 01                 LDA #1
00148  C0CE  8D D6 C1              STA AY
00149  C0D1                        
00150  C0D1                        ; @                 
00151  C0D1                        ; COLLISION MANAGEMENT BETWEEN LANDER AND BACKGROUND.
00152  C0D1                        ; $D01F
00153  C0D1                        ; BIT #X: 1 = SPRITE #X COLLIDED WITH BACKGROUND.
00154  C0D1                        ; IF COLLISION BETWEEN LANDER AND BACKGROUND IS DETECTED,
00155  C0D1                        ; LANDER SPRITE IS DISABLED AND GAME QUITS.
00156  C0D1                        ; @                 
00157  C0D1  A9 01                 LDA #%00000001
00158  C0D3  2C 1F D0              BIT $D01F
00159  C0D6  F0 26                 BEQ CONT01
00160  C0D8  A9 30                 LDA #%00110000  ; DISABLE LANDER SPRITE AND ENABLE EXPLOSION
00161  C0DA  8D 15 D0              STA $D015       ;
00162  C0DD  AD 00 D0              LDA $D000       ; MOVE EXPLOSION SPRITE TO RIGHT LOCATION
00163  C0E0  8D 0A D0              STA $D00A       ;
00164  C0E3  AD 01 D0              LDA $D001
00165  C0E6  8D 0B D0              STA $D00B
00166  C0E9  A2 00                 LDX #0
00167  C0EB  BD E3 C1   DRAWCR     LDA CR_MSG,X    ; DIAPLY MESSAGE FOR CRASH
00168  C0EE  9D F1 05              STA $05F1,X
00169  C0F1  A9 01                 LDA #1
00170  C0F3  9D F1 D9              STA $D9F1,X
00171  C0F6  E8                    INX
00172  C0F7  E0 07                 CPX #7
00173  C0F9  D0 F0                 BNE DRAWCR
00174  C0FB  4C D4 C1              JMP EXIT         ; GAME END!
00175  C0FE                        ; @                 
00176  C0FE                        ; COLLISION MANAGEMENT BETWEEN LANDER AND PLATFORM
00177  C0FE                        ; $D01E
00178  C0FE                        ; BIT #X: 1 = SPRITE #X COLLIDED WITH ANOTHER SPRITE.
00179  C0FE                        ; @                 
00180  C0FE  A9 01      CONT01     LDA #%00000001
00181  C100  2C 1E D0              BIT $D01E
00182  C103  F0 18                 BEQ CONT02
00183  C105  4C 08 C1              JMP LANDED
00184  C108             
00185  C108  A2 00      LANDED     LDX #0
00186  C10A  BD DD C1   DRAWOK     LDA LD_MSG,X    ; DIAPLY MESSAGE FOR LANDING
00187  C10D  9D F1 05              STA $05F1,X     ; STRANGE BEHAVIOUR HERE!!! SEEMS THAT OLWAYS COLLISION
00188  C110  A9 01                 LDA #1          ; IS PRESENT. WHY???
00189  C112  9D F1 D9              STA $D9F1,X
00190  C115  E8                    INX
00191  C116  E0 05                 CPX #5
00192  C118  D0 F0                 BNE DRAWOK
00193  C11A  4C D4 C1              JMP EXIT      ; GAME END!
00194  C11D             
00195  C11D  A9 01      CONT02     LDA #%00000001 ; MASK JOYSTICK UP MOVEMENT
00196  C11F  2C 00 DC              BIT $DC00      ; BITWISE AND WITH ADDRESS 56320
00197  C122  D0 0A                 BNE CONT1      ; NO THRUST UP
00198  C124  A9 13                 LDA #%00010011
00199  C126  8D 15 D0              STA $D015
00200  C129  A9 FC                 LDA #-4
00201  C12B  8D D6 C1              STA AY
00202  C12E             
00203  C12E  A9 02      CONT1      LDA #%00000010 ; MASK JOYSTICK DOWN MOVEMENT
00204  C130  2C 00 DC              BIT $DC00      ; BITWISE AND WITH ADDRESS 56320
00205  C133  D0 05                 BNE CONT2      ; NO THRUST DOWN
00206  C135  A9 02                 LDA #2
00207  C137  8D D6 C1              STA AY
00208  C13A             
00209  C13A  A9 04      CONT2      LDA #%00000100 ; MASK JOYSTICK LEFT MOVEMENT
00210  C13C  2C 00 DC              BIT $DC00      ; BITWISE AND WITH ADDRESS 56320
00211  C13F  D0 0A                 BNE CONT3      ; NO THRUST LEFT
00212  C141  A9 19                 LDA #%00011001
00213  C143  8D 15 D0              STA $D015
00214  C146  A9 FF                 LDA #-1
00215  C148  8D D5 C1              STA AX
00216  C14B             
00217  C14B  A9 08      CONT3      LDA #%00001000 ; MASK JOYSTICK RIGHT MOVEMENT
00218  C14D  2C 00 DC              BIT $DC00      ; BITWISE AND WITH ADDRESS 56320
00219  C150  D0 0A                 BNE CONT4      ; NO THRUST RIGHT
00220  C152  A9 15                 LDA #%00010101
00221  C154  8D 15 D0              STA $D015
00222  C157  A9 01                 LDA #1
00223  C159  8D D5 C1              STA AX
00224  C15C             
00225  C15C  18         CONT4      CLC
00226  C15D  AD D7 C1              LDA VX  ; VX = VX + AX * DT
00227  C160  6D D5 C1              ADC AX
00228  C163  8D D7 C1              STA VX
00229  C166  2C D5 C1              BIT AX
00230  C169  30 04                 BMI MIX
00231  C16B  A9 00                 LDA #0
00232  C16D  10 02                 BPL MIX2
00233  C16F  A9 FF      MIX        LDA #255
00234  C171  6D D8 C1   MIX2       ADC VX+1
00235  C174  8D D8 C1              STA VX+1
00236  C177             
00237  C177  18                    CLC
00238  C178  AD D9 C1              LDA VY  ; VY = VY + AY * DT
00239  C17B  6D D6 C1              ADC AY
00240  C17E  8D D9 C1              STA VY
00241  C181  2C D6 C1              BIT AY
00242  C184  30 04                 BMI MIY
00243  C186  A9 00                 LDA #0
00244  C188  10 02                 BPL MIY2
00245  C18A  A9 FF      MIY        LDA #255
00246  C18C  6D DA C1   MIY2       ADC VY+1
00247  C18F  8D DA C1              STA VY+1
00248  C192             
00249  C192  18                    CLC
00250  C193                        ;LANDER
00251  C193  AD DB C1              LDA PXL  ; PX = PX + VX * DT
00252  C196  6D D7 C1              ADC VX
00253  C199  8D DB C1              STA PXL
00254  C19C  AD 00 D0              LDA $D000
00255  C19F  6D D8 C1              ADC VX+1
00256  C1A2  8D 00 D0              STA $D000 ; LANDER
00257  C1A5  8D 02 D0              STA $D002 ; MAINENGINE
00258  C1A8  8D 04 D0              STA $D004 ; LEFT ROKET
00259  C1AB  8D 06 D0              STA $D006 ; RIGHT ROKET
00260  C1AE                        
00261  C1AE                        
00262  C1AE  18                    CLC
00263  C1AF  AD DC C1              LDA PYL  ; PY = PY + VY * DT
00264  C1B2  6D D9 C1              ADC VY
00265  C1B5  8D DC C1              STA PYL
00266  C1B8  AD 01 D0              LDA $D001
00267  C1BB  6D DA C1              ADC VY+1
00268  C1BE  8D 01 D0              STA $D001 ; LANDER
00269  C1C1  8D 03 D0              STA $D003 ; MAINENGINE
00270  C1C4  8D 05 D0              STA $D005 ; LEFT ROKET
00271  C1C7  8D 07 D0              STA $D007 ; RIGHT ROKET
00272  C1CA                        
00273  C1CA                        ;LDA $D01E
00274  C1CA                        ;LDX $D01E
00275  C1CA                        ;JSR $BDCD
00276  C1CA                        ;JSR $E544
00277  C1CA             
00278  C1CA  A9 10                 LDA #%00010000 ; MASK JOYSTICK BUTTON PUSH
00279  C1CC  2C 00 DC              BIT $DC00      ; BITWISE AND WITH ADDRESS 56320
00280  C1CF  F0 03                 BEQ EXIT       ; BUTTON PRESSED -> EXIT
00281  C1D1  4C BB C0              JMP MAIN
00282  C1D4  60         EXIT       RTS            ; BACK TO BASIC
00283  C1D5             
00284  C1D5  00         AX         BYTE 0
00285  C1D6  00         AY         BYTE 0
00286  C1D7  00         VX         BYTE 0
00287  C1D8  00                    BYTE 0
00288  C1D9  00         VY         BYTE 0
00289  C1DA  00                    BYTE 0
00290  C1DB  00         PXL        BYTE 0
00291  C1DC  00         PYL        BYTE 0
00292  C1DD  0C 01 0E   LD_MSG     BYTE 12,1,14,4,5,4   ; LANDED
00293  C1E3  03 12 01   CR_MSG     BYTE 3,18,1,19,8,5,4 ; CRASHED
00294  C1EA             

******* 37 Label(s) *******
ax = $C1D5 
ay = $C1D6 
cont01 = $C0FE 
cont02 = $C11D 
cont1 = $C12E 
cont2 = $C13A 
cont3 = $C14B 
cont4 = $C15C 
cr_msg = $C1E3 
drawCr = $C0EB 
drawOK = $C10A 
exit = $C1D4 
init = $C000 
landed = $C108 
ld_msg = $C1DD 
main = $C0BB 
mix = $C16F 
mix2 = $C171 
miy = $C18A 
miy2 = $C18C 
pxL = $C1DB 
pyL = $C1DC 
row1 = $C041 
row1c = $C081 
row2 = $C04B 
row2c = $C08B 
row3 = $C055 
row3c = $C095 
row4 = $C05F 
row4c = $C09F 
row5 = $C069 
row5c = $C0A9 
row6 = $C073 
row6c = $C0B3 
vx = $C1D7 
vy = $C1D9 
wait = $C0BD 

******* 1 Unused label(s) *******
init

******* 1 Variable(s) *******
tgt_c64  = $0001
******* 1 Unused variables(s) *******
tgt_c64

